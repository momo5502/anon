name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      run_tests:
        description: "Run the tests?"
        required: true

jobs:
  build-win:
    name: Build Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        arch:
          - x86
          - x64
        include:
          - arch: x86
            platform: Win32
          - arch: x64
            platform: x64
    steps:
      - name: Check out files
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          # NOTE - If LFS ever starts getting used during builds, switch this to true!
          lfs: false

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Generate project files
        run: cmd /C call generate.bat

      - name: Set up problem matching
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: msbuild /m /v:minimal /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.platform}} build/anon.sln

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v3
        with:
          name: Windows ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/${{matrix.arch}}/${{matrix.configuration}}/anon.exe
            build/bin/${{matrix.arch}}/${{matrix.configuration}}/anon.pdb

  build-lin:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        arch:
          - x86
          - x64
        include:
          - configuration: Debug
            config: debug
          - configuration: Release
            config: release
    steps:
      - name: Check out files
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          # NOTE - If LFS ever starts getting used during builds, switch this to true!
          lfs: false

      - name: Install dependencies (x64)
        if: matrix.arch == 'x64'
        run: |
          sudo apt-get update
          sudo apt-get -y install libcurl4-gnutls-dev

      - name: Install dependencies (x86)
        if: matrix.arch == 'x86'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get -y install gcc-multilib g++-multilib libcurl4-gnutls-dev:i386

      - name: Generate project files
        run: ./generate.sh

      - name: Set up problem matching
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: |
          pushd build
          ../tools/mold -run make config=${{matrix.config}}_${{matrix.arch}} -j$(nproc)

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v3
        with:
          name: Linux ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/${{matrix.arch}}/${{matrix.configuration}}/anon

  build-mac:
    name: Build macOS
    runs-on: macOS-11 #macos-latest
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Debug
          - Release
        arch:
          - x64
          - ARM
        include:
          - configuration: Debug
            config: debug
          - configuration: Release
            config: release
          - arch: x64
            platform: x64
          - arch: ARM
            platform: arm
    steps:
      - name: Check out files
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          # NOTE - If LFS ever starts getting used during builds, switch this to true!
          lfs: false

      - name: Generate project files
        run: ./generate.sh

      - name: Set up problem matching
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Build ${{matrix.configuration}} ${{matrix.arch}} binaries
        run: |
          pushd build
          make config=${{matrix.config}}_${{matrix.platform}} -j$(sysctl -n hw.logicalcpu)

      - name: Upload ${{matrix.configuration}} ${{matrix.arch}} binaries
        uses: actions/upload-artifact@v3
        with:
          name: macOS ${{matrix.configuration}} ${{matrix.arch}} binaries
          path: |
            build/bin/${{matrix.platform}}/${{matrix.configuration}}/anon

  test-lin:
    name: Test Linux
    timeout-minutes: 20
    needs: 
      - build-lin
    runs-on: ubuntu-latest
    if: github.event.inputs.run_tests == 'true'
    steps:
      - name: Download Linux Release x64 binaries
        uses: actions/download-artifact@v3
        with:
          name: Linux Release x64 binaries

      - name: Set file permission
        run: chmod +x ./anon

      - name: Run test
        run: ./anon

  test-mac:
    name: Test macOS
    timeout-minutes: 20
    needs: 
      - build-mac
    runs-on: macOS-11
    if: github.event.inputs.run_tests == 'true'
    steps:
      - name: Download macOS Release x64 binaries
        uses: actions/download-artifact@v3
        with:
          name: macOS Release x64 binaries

      - name: Set file permission
        run: chmod +x ./anon

      - name: Run test
        run: ./anon

  test-win:
    name: Test Windows
    timeout-minutes: 20
    needs: 
      - build-win
    runs-on: windows-latest
    if: github.event.inputs.run_tests == 'true'
    steps:
      - name: Download Windows Release x64 binaries
        uses: actions/download-artifact@v3
        with:
          name: Windows Release x64 binaries

      - name: Run test
        run: .\anon.exe
